---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: accounts.issue.natssecrets.crossplane.io
spec:
  group: issue.natssecrets.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - natssecrets
    kind: Account
    listKind: AccountList
    plural: accounts
    singular: account
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Account is an example API type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A AccountSpec defines the desired state of a Account.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: AccountParameters are the configurable fields of a Account.
                properties:
                  account:
                    type: string
                  account_claims:
                    description: AccountClaims defines the body of an account JWT
                    properties:
                      aud:
                        type: string
                      exp:
                        format: int64
                        type: integer
                      iat:
                        format: int64
                        type: integer
                      iss:
                        type: string
                      jti:
                        type: string
                      name:
                        type: string
                      nats:
                        description: Account holds account specific claims data
                        properties:
                          default_permissions:
                            description: Permissions are used to restrict subject
                              access, either on a user or for everyone on a server
                              by default
                            properties:
                              pub:
                                description: Permission defines allow/deny subjects
                                properties:
                                  allow:
                                    description: StringList is a wrapper for an array
                                      of strings
                                    items:
                                      type: string
                                    type: array
                                  deny:
                                    description: StringList is a wrapper for an array
                                      of strings
                                    items:
                                      type: string
                                    type: array
                                type: object
                              resp:
                                description: ResponsePermission can be used to allow
                                  responses to any reply subject that is received
                                  on a valid subscription.
                                properties:
                                  max:
                                    type: integer
                                  ttl:
                                    description: A Duration represents the elapsed
                                      time between two instants as an int64 nanosecond
                                      count. The representation limits the largest
                                      representable duration to approximately 290
                                      years.
                                    format: int64
                                    type: integer
                                required:
                                - max
                                - ttl
                                type: object
                              sub:
                                description: Permission defines allow/deny subjects
                                properties:
                                  allow:
                                    description: StringList is a wrapper for an array
                                      of strings
                                    items:
                                      type: string
                                    type: array
                                  deny:
                                    description: StringList is a wrapper for an array
                                      of strings
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          description:
                            type: string
                          exports:
                            description: Exports is a slice of exports
                            items:
                              description: Export represents a single export
                              properties:
                                account_token_position:
                                  type: integer
                                advertise:
                                  type: boolean
                                description:
                                  type: string
                                info_url:
                                  type: string
                                name:
                                  type: string
                                response_threshold:
                                  description: A Duration represents the elapsed time
                                    between two instants as an int64 nanosecond count.
                                    The representation limits the largest representable
                                    duration to approximately 290 years.
                                  format: int64
                                  type: integer
                                response_type:
                                  description: ResponseType is used to store an export
                                    response type
                                  type: string
                                revocations:
                                  additionalProperties:
                                    format: int64
                                    type: integer
                                  description: RevocationList is used to store a mapping
                                    of public keys to unix timestamps
                                  type: object
                                service_latency:
                                  description: "ServiceLatency is used when observing
                                    and exported service for latency measurements.
                                    Sampling 1-100, represents sampling rate, defaults
                                    to 100. Results is the subject where the latency
                                    metrics are published. A metric will be defined
                                    by the nats-server's ServiceLatency. Time durations
                                    are in nanoseconds. see https://github.com/nats-io/nats-server/blob/main/server/accounts.go#L524
                                    e.g. \n { \"app\": \"dlc22\", \"start\": \"2019-09-16T21:46:23.636869585-07:00\",
                                    \"svc\": 219732, \"nats\": { \"req\": 320415,
                                    \"resp\": 228268, \"sys\": 0 }, \"total\": 768415
                                    }"
                                  properties:
                                    results:
                                      description: Subject is a string that represents
                                        a NATS subject
                                      type: string
                                    sampling:
                                      type: integer
                                  required:
                                  - results
                                  - sampling
                                  type: object
                                subject:
                                  description: Subject is a string that represents
                                    a NATS subject
                                  type: string
                                token_req:
                                  type: boolean
                                type:
                                  description: ExportType defines the type of import/export.
                                  type: integer
                              type: object
                            type: array
                          imports:
                            description: Imports is a list of import structs
                            items:
                              description: Import describes a mapping from another
                                account into this one
                              properties:
                                account:
                                  type: string
                                local_subject:
                                  description: Local subject used to subscribe (for
                                    streams) and publish (for services) to. This value
                                    only needs setting if you want to change the value
                                    of Subject. If the value of Subject ends in >
                                    then LocalSubject needs to end in > as well. LocalSubject
                                    can contain $<number> wildcard references where
                                    number references the nth wildcard in Subject.
                                    The sum of wildcard reference and * tokens needs
                                    to match the number of * token in Subject.
                                  type: string
                                name:
                                  type: string
                                share:
                                  type: boolean
                                subject:
                                  description: Subject field in an import is always
                                    from the perspective of the initial publisher
                                    - in the case of a stream it is the account owning
                                    the stream (the exporter), and in the case of
                                    a service it is the account making the request
                                    (the importer).
                                  type: string
                                to:
                                  description: 'Deprecated: use LocalSubject instead
                                    To field in an import is always from the perspective
                                    of the subscriber in the case of a stream it is
                                    the client of the stream (the importer), from
                                    the perspective of a service, it is the subscription
                                    waiting for requests (the exporter). If the field
                                    is empty, it will default to the value in the
                                    Subject field.'
                                  type: string
                                token:
                                  type: string
                                type:
                                  description: ExportType defines the type of import/export.
                                  type: integer
                              type: object
                            type: array
                          info_url:
                            type: string
                          limits:
                            description: OperatorLimits are used to limit access by
                              an account
                            properties:
                              conn:
                                format: int64
                                type: integer
                              consumer:
                                format: int64
                                type: integer
                              data:
                                format: int64
                                type: integer
                              disallow_bearer:
                                type: boolean
                              disk_max_stream_bytes:
                                format: int64
                                type: integer
                              disk_storage:
                                format: int64
                                type: integer
                              exports:
                                format: int64
                                type: integer
                              imports:
                                format: int64
                                type: integer
                              leaf:
                                format: int64
                                type: integer
                              max_ack_pending:
                                format: int64
                                type: integer
                              max_bytes_required:
                                type: boolean
                              mem_max_stream_bytes:
                                format: int64
                                type: integer
                              mem_storage:
                                format: int64
                                type: integer
                              payload:
                                format: int64
                                type: integer
                              streams:
                                format: int64
                                type: integer
                              subs:
                                format: int64
                                type: integer
                              tiered_limits:
                                additionalProperties:
                                  properties:
                                    consumer:
                                      format: int64
                                      type: integer
                                    disk_max_stream_bytes:
                                      format: int64
                                      type: integer
                                    disk_storage:
                                      format: int64
                                      type: integer
                                    max_ack_pending:
                                      format: int64
                                      type: integer
                                    max_bytes_required:
                                      type: boolean
                                    mem_max_stream_bytes:
                                      format: int64
                                      type: integer
                                    mem_storage:
                                      format: int64
                                      type: integer
                                    streams:
                                      format: int64
                                      type: integer
                                  type: object
                                type: object
                              wildcards:
                                type: boolean
                            type: object
                          mappings:
                            additionalProperties:
                              items:
                                description: Mapping for publishes
                                properties:
                                  cluster:
                                    type: string
                                  subject:
                                    description: Subject is a string that represents
                                      a NATS subject
                                    type: string
                                  weight:
                                    type: integer
                                required:
                                - subject
                                type: object
                              type: array
                            type: object
                          revocations:
                            additionalProperties:
                              format: int64
                              type: integer
                            description: TODO SigningKeys        SigningKeys    `json:"signing_keys,omitempty"`
                            type: object
                          tags:
                            description: TagList is a unique array of lower case strings
                              All tag list methods lower case the strings in the arguments
                            items:
                              type: string
                            type: array
                          type:
                            description: ClaimType is used to indicate the type of
                              JWT being stored in a Claim
                            type: string
                          version:
                            type: integer
                        type: object
                      nbf:
                        format: int64
                        type: integer
                      sub:
                        type: string
                    type: object
                  operator:
                    type: string
                required:
                - account
                - operator
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A AccountStatus represents the observed state of a Account.
            properties:
              atProvider:
                description: AccountObservation are the observable fields of a Account.
                properties:
                  account:
                    type: string
                  issue:
                    type: string
                  jwt:
                    type: string
                  nkey:
                    type: string
                  operator:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

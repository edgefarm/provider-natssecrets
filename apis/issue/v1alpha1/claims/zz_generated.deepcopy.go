//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package claims

import ()

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Account) DeepCopyInto(out *Account) {
	*out = *in
	if in.Imports != nil {
		in, out := &in.Imports, &out.Imports
		*out = make(Imports, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Import)
				**out = **in
			}
		}
	}
	if in.Exports != nil {
		in, out := &in.Exports, &out.Exports
		*out = make(Exports, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Export)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	in.Limits.DeepCopyInto(&out.Limits)
	if in.Revocations != nil {
		in, out := &in.Revocations, &out.Revocations
		*out = make(RevocationList, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.DefaultPermissions.DeepCopyInto(&out.DefaultPermissions)
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = make(Mapping, len(*in))
		for key, val := range *in {
			var outVal []WeightedMapping
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]WeightedMapping, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	out.Info = in.Info
	in.GenericFields.DeepCopyInto(&out.GenericFields)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Account.
func (in *Account) DeepCopy() *Account {
	if in == nil {
		return nil
	}
	out := new(Account)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountClaims) DeepCopyInto(out *AccountClaims) {
	*out = *in
	out.ClaimsData = in.ClaimsData
	in.Account.DeepCopyInto(&out.Account)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountClaims.
func (in *AccountClaims) DeepCopy() *AccountClaims {
	if in == nil {
		return nil
	}
	out := new(AccountClaims)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountLimits) DeepCopyInto(out *AccountLimits) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountLimits.
func (in *AccountLimits) DeepCopy() *AccountLimits {
	if in == nil {
		return nil
	}
	out := new(AccountLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in CIDRList) DeepCopyInto(out *CIDRList) {
	{
		in := &in
		*out = make(CIDRList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CIDRList.
func (in CIDRList) DeepCopy() CIDRList {
	if in == nil {
		return nil
	}
	out := new(CIDRList)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClaimsData) DeepCopyInto(out *ClaimsData) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClaimsData.
func (in *ClaimsData) DeepCopy() *ClaimsData {
	if in == nil {
		return nil
	}
	out := new(ClaimsData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Export) DeepCopyInto(out *Export) {
	*out = *in
	if in.Revocations != nil {
		in, out := &in.Revocations, &out.Revocations
		*out = make(RevocationList, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Latency != nil {
		in, out := &in.Latency, &out.Latency
		*out = new(ServiceLatency)
		**out = **in
	}
	out.Info = in.Info
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Export.
func (in *Export) DeepCopy() *Export {
	if in == nil {
		return nil
	}
	out := new(Export)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Exports) DeepCopyInto(out *Exports) {
	{
		in := &in
		*out = make(Exports, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Export)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Exports.
func (in Exports) DeepCopy() Exports {
	if in == nil {
		return nil
	}
	out := new(Exports)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericFields) DeepCopyInto(out *GenericFields) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(TagList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericFields.
func (in *GenericFields) DeepCopy() *GenericFields {
	if in == nil {
		return nil
	}
	out := new(GenericFields)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Import) DeepCopyInto(out *Import) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Import.
func (in *Import) DeepCopy() *Import {
	if in == nil {
		return nil
	}
	out := new(Import)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Imports) DeepCopyInto(out *Imports) {
	{
		in := &in
		*out = make(Imports, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Import)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Imports.
func (in Imports) DeepCopy() Imports {
	if in == nil {
		return nil
	}
	out := new(Imports)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Info) DeepCopyInto(out *Info) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Info.
func (in *Info) DeepCopy() *Info {
	if in == nil {
		return nil
	}
	out := new(Info)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JetStreamLimits) DeepCopyInto(out *JetStreamLimits) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JetStreamLimits.
func (in *JetStreamLimits) DeepCopy() *JetStreamLimits {
	if in == nil {
		return nil
	}
	out := new(JetStreamLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in JetStreamTieredLimits) DeepCopyInto(out *JetStreamTieredLimits) {
	{
		in := &in
		*out = make(JetStreamTieredLimits, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JetStreamTieredLimits.
func (in JetStreamTieredLimits) DeepCopy() JetStreamTieredLimits {
	if in == nil {
		return nil
	}
	out := new(JetStreamTieredLimits)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Limits) DeepCopyInto(out *Limits) {
	*out = *in
	in.UserLimits.DeepCopyInto(&out.UserLimits)
	out.NatsLimits = in.NatsLimits
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Limits.
func (in *Limits) DeepCopy() *Limits {
	if in == nil {
		return nil
	}
	out := new(Limits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Mapping) DeepCopyInto(out *Mapping) {
	{
		in := &in
		*out = make(Mapping, len(*in))
		for key, val := range *in {
			var outVal []WeightedMapping
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]WeightedMapping, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mapping.
func (in Mapping) DeepCopy() Mapping {
	if in == nil {
		return nil
	}
	out := new(Mapping)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatsLimits) DeepCopyInto(out *NatsLimits) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatsLimits.
func (in *NatsLimits) DeepCopy() *NatsLimits {
	if in == nil {
		return nil
	}
	out := new(NatsLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Operator) DeepCopyInto(out *Operator) {
	*out = *in
	if in.OperatorServiceURLs != nil {
		in, out := &in.OperatorServiceURLs, &out.OperatorServiceURLs
		*out = make(StringList, len(*in))
		copy(*out, *in)
	}
	in.GenericFields.DeepCopyInto(&out.GenericFields)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Operator.
func (in *Operator) DeepCopy() *Operator {
	if in == nil {
		return nil
	}
	out := new(Operator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorClaims) DeepCopyInto(out *OperatorClaims) {
	*out = *in
	out.ClaimsData = in.ClaimsData
	in.Operator.DeepCopyInto(&out.Operator)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorClaims.
func (in *OperatorClaims) DeepCopy() *OperatorClaims {
	if in == nil {
		return nil
	}
	out := new(OperatorClaims)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorLimits) DeepCopyInto(out *OperatorLimits) {
	*out = *in
	out.NatsLimits = in.NatsLimits
	out.AccountLimits = in.AccountLimits
	out.JetStreamLimits = in.JetStreamLimits
	if in.JetStreamTieredLimits != nil {
		in, out := &in.JetStreamTieredLimits, &out.JetStreamTieredLimits
		*out = make(JetStreamTieredLimits, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorLimits.
func (in *OperatorLimits) DeepCopy() *OperatorLimits {
	if in == nil {
		return nil
	}
	out := new(OperatorLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Permission) DeepCopyInto(out *Permission) {
	*out = *in
	if in.Allow != nil {
		in, out := &in.Allow, &out.Allow
		*out = make(StringList, len(*in))
		copy(*out, *in)
	}
	if in.Deny != nil {
		in, out := &in.Deny, &out.Deny
		*out = make(StringList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Permission.
func (in *Permission) DeepCopy() *Permission {
	if in == nil {
		return nil
	}
	out := new(Permission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Permissions) DeepCopyInto(out *Permissions) {
	*out = *in
	in.Pub.DeepCopyInto(&out.Pub)
	in.Sub.DeepCopyInto(&out.Sub)
	if in.Resp != nil {
		in, out := &in.Resp, &out.Resp
		*out = new(ResponsePermission)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Permissions.
func (in *Permissions) DeepCopy() *Permissions {
	if in == nil {
		return nil
	}
	out := new(Permissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponsePermission) DeepCopyInto(out *ResponsePermission) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponsePermission.
func (in *ResponsePermission) DeepCopy() *ResponsePermission {
	if in == nil {
		return nil
	}
	out := new(ResponsePermission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in RevocationList) DeepCopyInto(out *RevocationList) {
	{
		in := &in
		*out = make(RevocationList, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevocationList.
func (in RevocationList) DeepCopy() RevocationList {
	if in == nil {
		return nil
	}
	out := new(RevocationList)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceLatency) DeepCopyInto(out *ServiceLatency) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceLatency.
func (in *ServiceLatency) DeepCopy() *ServiceLatency {
	if in == nil {
		return nil
	}
	out := new(ServiceLatency)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in StringList) DeepCopyInto(out *StringList) {
	{
		in := &in
		*out = make(StringList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StringList.
func (in StringList) DeepCopy() StringList {
	if in == nil {
		return nil
	}
	out := new(StringList)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in TagList) DeepCopyInto(out *TagList) {
	{
		in := &in
		*out = make(TagList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagList.
func (in TagList) DeepCopy() TagList {
	if in == nil {
		return nil
	}
	out := new(TagList)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeRange) DeepCopyInto(out *TimeRange) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeRange.
func (in *TimeRange) DeepCopy() *TimeRange {
	if in == nil {
		return nil
	}
	out := new(TimeRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	in.UserPermissionLimits.DeepCopyInto(&out.UserPermissionLimits)
	in.GenericFields.DeepCopyInto(&out.GenericFields)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserClaims) DeepCopyInto(out *UserClaims) {
	*out = *in
	out.ClaimsData = in.ClaimsData
	in.User.DeepCopyInto(&out.User)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserClaims.
func (in *UserClaims) DeepCopy() *UserClaims {
	if in == nil {
		return nil
	}
	out := new(UserClaims)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserLimits) DeepCopyInto(out *UserLimits) {
	*out = *in
	if in.Src != nil {
		in, out := &in.Src, &out.Src
		*out = make(CIDRList, len(*in))
		copy(*out, *in)
	}
	if in.Times != nil {
		in, out := &in.Times, &out.Times
		*out = make([]TimeRange, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserLimits.
func (in *UserLimits) DeepCopy() *UserLimits {
	if in == nil {
		return nil
	}
	out := new(UserLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserPermissionLimits) DeepCopyInto(out *UserPermissionLimits) {
	*out = *in
	in.Permissions.DeepCopyInto(&out.Permissions)
	in.Limits.DeepCopyInto(&out.Limits)
	if in.AllowedConnectionTypes != nil {
		in, out := &in.AllowedConnectionTypes, &out.AllowedConnectionTypes
		*out = make(StringList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserPermissionLimits.
func (in *UserPermissionLimits) DeepCopy() *UserPermissionLimits {
	if in == nil {
		return nil
	}
	out := new(UserPermissionLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedMapping) DeepCopyInto(out *WeightedMapping) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedMapping.
func (in *WeightedMapping) DeepCopy() *WeightedMapping {
	if in == nil {
		return nil
	}
	out := new(WeightedMapping)
	in.DeepCopyInto(out)
	return out
}
